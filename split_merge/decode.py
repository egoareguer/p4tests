#!/usr/bin/env python

import scipy as sp

# We have four+ registers of size REGISTERS_SIZE, noted N
# Each entry is a bitmap
# Their count ~ bitwidth*ln(bitwidth/Z), where Z is the number of zeroes

reg=[ 1, 67117056, 1024, 0, 0, 0, 134217856, 546373632, 0, 134217732, 0, 0, 65544, 0, 4325376, 1048584, 8519808, 128, 0, 0, 1152, 0, 67108868, 139264, 0, 16777728, 536870912, 0, 0, 10240, 1207959552, 0, 0, 4096, 0, 134217729, 262144, 2048, 2099200, 1073741824, 0, 1073741824, 4, 1, 131328, 256, 0, 0, 0, 0, 134217984, 4194432, 2, 0, 0, 8388644, 134217730, 0, 0, 0, 0, 262144, 1048576, 268435456, 536870912, 0, 2176, 268959744, 0, 1073741832, 4194304, 33554440, 32768, 2112, 1, 0, 0, 4096, 0, 8224, 4, 0, 320, 0, 8388608, 6, 133120, 67110912, 32768, 134217728, 0, 0, 536870912, 0, 16, 536936448, 32, 0, 67503104, 0, 0, 32768, 0, 16777248, 0, 8, 134218784, 130, 1048576, 64, 10485768, 0, 134234112, 0, 64, 0, 0, 268435456, 65536, 0, 33554944, 20480, 0, 0, 16777216, 0, 5120, 8388608, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]


def count_zeroes(n):
	res=0
	bn=bin(n)[2:]
	for i in bn:
		if int(i)==0:
			res=res+1
	res=res+32-len(bn)
	return(res)

N=len(reg)
counts=[]
bins=[]
bitwidth=32
for port in range(N):
	bins.append(bin(reg[port])[2:])
	sum=0
	Z=count_zeroes(reg[port])
	if Z!=0:
		sum=sum+bitwidth*sp.log(float(bitwidth)/Z)	
	counts.append(sum)
	if reg[port]!=0:
		print(port,bins[-1],counts[-1])
